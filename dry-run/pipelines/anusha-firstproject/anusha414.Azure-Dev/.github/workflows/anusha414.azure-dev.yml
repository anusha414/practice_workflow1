name: anusha-firstproject/anusha414.Azure-Dev
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Setup Java 8
      uses: actions/setup-java@v4.0.0
      with:
        distribution: zulu
        java-version: '8'
    - name: Run maven
      run: mvn --file pom.xml package
      env:
        MAVEN_OPTS: "-Xmx3072m"
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2.12.0
      if: always()
      with:
        junit_files: "**/surefire-reports/TEST-*.xml"
    # The following script preserves the globbing behavior of the CopyFiles task.
    # Refer to this transformer's documentation for an alternative that will work in simple cases.
    - uses: actions/github-script@v7.0.0
      env:
        TARGET_FOLDER: "${{ runner.temp }}"
        CONTENTS: "**/*.jar"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const target = path.resolve(process.env.TARGET_FOLDER)
          process.chdir(process.env.SOURCE_FOLDER || '.')
          if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)
          const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
          const options = {force: process.env.OVERWRITE === 'true'}
          const globber = await glob.create(process.env.CONTENTS || '**')
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest, options)
          }
    - uses: actions/upload-artifact@v4.1.0
      with:
        name: jarfile
        path: "${{ runner.temp }}"
